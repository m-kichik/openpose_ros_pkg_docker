FROM nvcr.io/nvidia/tensorrt:21.09-py3
# FROM nvidia/cuda:11.1.1-cudnn8-devel-ubuntu20.04
# FROM nvidia/cuda:11.4.0-cudnn8-devel-ubuntu18.04 

ENV DEBIAN_FRONTEND=noninteractive

RUN apt update && apt install locales && \
    locale-gen en_US en_US.UTF-8 && \
    update-locale LC_ALL=en_US.UTF-8 LANG=en_US.UTF-8 && \
    apt -y clean && \
    rm -rf /var/lib/apt/lists/*
ENV LANG=en_US.UTF-8

#get deps
RUN apt-get update && \
DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \
python3-dev python3-pip python3-setuptools git g++ wget make libprotobuf-dev protobuf-compiler libopencv-dev \
libgoogle-glog-dev libboost-all-dev libhdf5-dev libatlas-base-dev

# RUN apt-get install -y libcaffe-cuda-dev

RUN python3 -m pip install --upgrade pip

# Install ROS1 Noetic
RUN apt-get update && apt-get install --no-install-recommends -y \
        gnupg \
        lsb-release \
        curl && \
    sh -c 'echo "deb http://packages.ros.org/ros/ubuntu $(lsb_release -sc) main" > /etc/apt/sources.list.d/ros-latest.list' && \
    curl -s https://raw.githubusercontent.com/ros/rosdistro/master/ros.asc | apt-key add - && \
    apt-get update && apt-get install --no-install-recommends -y \
        ros-noetic-ros-base \
        ros-noetic-cv-bridge \
        ros-noetic-rqt \
        ros-noetic-rqt-graph \
        ros-noetic-rqt-common-plugins \
        python3-rosdep \
        python3-catkin-pkg \
        python3-rosinstall \
        python3-rospkg \
        python3-rosinstall-generator \
        python3-wstool \
        build-essential && \
    rosdep init && \
    rosdep update && \
    rm -rf /var/lib/apt/lists/*

RUN python3 -m pip install cmake

#for python api
RUN pip3 install --upgrade pip
RUN pip3 install numpy opencv-python 

#replace cmake as old version has CUDA variable bugs on Ubuntu 18.04
# RUN wget https://github.com/Kitware/CMake/releases/download/v3.16.0/cmake-3.16.0-Linux-x86_64.tar.gz && \
# tar xzf cmake-3.16.0-Linux-x86_64.tar.gz -C /opt && \
# rm cmake-3.16.0-Linux-x86_64.tar.gz
# ENV PATH="/opt/cmake-3.16.0-Linux-x86_64/bin:${PATH}"

#get openpose
WORKDIR /home/openpose
RUN git clone https://github.com/CMU-Perceptual-Computing-Lab/openpose.git .

#build it
WORKDIR /home/openpose/build
RUN cmake -DBUILD_PYTHON=ON -DUSE_CUDNN=OFF .. && make -j `nproc`

#ros message filters
RUN apt-get install ros-noetic-message-filters

#requests
RUN pip3 install requests

# add user and his password
ARG USER=docker_openpose
ARG UID=1000
ARG GID=1000
# default password
ARG PW=user

RUN useradd -m ${USER} --uid=${UID} && echo "${USER}:${PW}" | chpasswd && adduser ${USER} sudo
WORKDIR /home/${USER}
RUN mkdir -p catkin_ws/src && chown -R ${UID}:${GID} /home/${USER}
USER ${UID}:${GID}
